{"version":3,"sources":["components/Home.js","components/user/LoaderButton.js","components/user/Login.js","components/user/DashboardHeader.js","components/user/TempDashboard.js","App.js","reportWebVitals.js","index.js"],"names":["Home","className","to","LoaderButton","isLoading","disabled","props","Button","children","Login","useState","setIsLoading","history","useHistory","email","setEmail","password","setPassword","invalidEmailMsg","setinvalidEmailMsg","invalidPassMsg","setinvalidPassMsg","isEmailValid","setisEmailValid","makeEmailGreen","setmakeEmailGreen","isPassEmpty","setisPassEmpty","valid","item","type","itemValue","target","value","console","warn","localStorage","getItem","push","htmlFor","id","xmlns","width","height","fill","viewBox","d","placeholder","onChange","spellCheck","onBlur","includes","data","user","response","url","params","method","body","JSON","stringify","resStatus","a","fetch","status","log","validateEmail","aria-label","aria-describedby","href","block","size","onClick","event","preventDefault","retStatus","validateUser","json","jsonData","setItem","alert","fillRule","DashboardHeader","SidenavOpen","setSidenavOpen","data-bs-toggle","aria-expanded","class","aria-labelledby","clear","clearSession","TempDashboard","currPassword","setcurrPassword","newPassword1","setnewPassword1","newPassword2","setnewPassword2","store","User","isLoggedInLS","CurrPass","NewPass","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"kQAGe,SAASA,IACpB,OACI,gCACI,oBAAIC,UAAU,YAAd,kCACA,cAAC,IAAD,CAAMC,GAAG,SAASD,UAAU,eAA5B,mBACA,cAAC,IAAD,CAAMC,GAAG,iBAAiBD,UAAU,eAApC,8B,mFCHG,SAASE,EAAT,GAKX,IAJFC,EAIC,EAJDA,UAIC,IAHDH,iBAGC,MAHW,GAGX,MAFDI,gBAEC,SADEC,EACF,oDACD,OACE,eAACC,EAAA,EAAD,yBACEF,SAAUA,GAAYD,EACtBH,UAAS,uBAAkBA,IACvBK,GAHN,cAKGF,GAAa,cAAC,IAAD,CAAeH,UAAU,aACtCK,EAAME,aCsPEC,MAnQf,WAEI,MAAkCC,oBAAS,GAA3C,mBAAON,EAAP,KAAkBO,EAAlB,KAEMC,EAAUC,cAEhB,EAA0BH,mBAAS,IAAnC,mBAAOI,EAAP,KAAcC,EAAd,KACA,EAAgCL,mBAAS,IAAzC,mBAAOM,EAAP,KAAiBC,EAAjB,KAEA,EAA8CP,mBAAS,IAAvD,mBAAOQ,EAAP,KAAwBC,EAAxB,KACA,EAA4CT,mBAAS,IAArD,mBAAOU,EAAP,KAAuBC,EAAvB,KAEA,EAAwCX,oBAAS,GAAjD,mBAAOY,EAAP,KAAqBC,EAArB,KACA,EAA4Cb,oBAAS,GAArD,mBAAOc,EAAP,KAAuBC,EAAvB,KACA,EAAsCf,oBAAS,GAA/C,mBAAOgB,EAAP,KAAoBC,EAApB,KAEA,SAASC,EAAMC,EAAMC,GAEjB,IAAIC,EAAYF,EAAKG,OAAOC,MAC5B,OAAQH,GACJ,IAAK,QACDP,GAAgB,GAChBJ,EAAmB,IACnBJ,EAASgB,GACT,MAEJ,IAAK,WACDJ,GAAe,GACfN,EAAkB,IAClBJ,EAAYc,GACZ,MAEJ,QACIG,QAAQC,KAAK,wCAyJzB,OACI,0CAPaC,aAAaC,QAAQ,iBAE9BzB,EAAQ0B,KAAK,mBAQb,sBAAMrC,UAAU,iBAAhB,SACI,qBAAKA,UAAU,MAAf,SACI,sBAAKA,UAAU,0EAAf,UACI,oBAAIA,UAAU,kBAAd,mBAEA,sBAAKA,UAAU,kBAAf,UACI,uBAAOsC,QAAQ,WAAWtC,UAAU,aAApC,sBAGA,sBAAKA,UAAU,mBAAf,UACI,qBAAKA,UAAU,sBAAf,SACI,sBAAMA,UAAU,yBAAyBuC,GAAG,eAA5C,SACI,qBAAKC,MAAM,6BAA6BC,MAAM,KAAKC,OAAO,KAAKC,KAAK,eAAe3C,UAAU,sBAAsB4C,QAAQ,YAA3H,SACI,sBAAMC,EAAE,yPAIpB,uBAAOhB,KAAK,QAAQ7B,UAAS,kCAA6BqB,EAAe,GAAK,sBAAjD,YAA0EE,EAAiB,oBAAsB,IAAMuB,YAAY,wBAC5JC,SAAU,SAACnB,GAAD,OAAUD,EAAMC,EAAM,UAAUoB,WAAW,QACrDC,OA1KhC,WAEI,IAAIpC,EAAMqC,SAAS,OAAQrC,EAAMqC,SAAS,MAAQrC,EAAMqC,SAAS,MAAQrC,EAAMqC,SAAS,MACpFrC,EAAMqC,SAAS,MAAQrC,EAAMqC,SAAS,KAItC,OAFA5B,GAAgB,QAChBJ,EAAmB,kCAGhBI,GAAgB,GAEvB,IAAI6B,EAAO,GACXA,EAAKC,KAAOvC,EAEZ,IAMIwC,EANAC,EAAM,kBACNC,EAAS,CACTC,OAAQ,OACRC,KAAMC,KAAKC,UAAUR,IAIrBS,EAAY,EArBK,4CAsBrB,sBAAAC,EAAA,+EAEyBC,MAAMR,EAAKC,GAFpC,OAEQF,EAFR,OAIQO,EAAYP,EAASU,OAJ7B,KAOgBH,EAPhB,OAQiB,MARjB,OAWiB,MAXjB,QAgBiB,MAhBjB,+BASgBpC,GAAkB,GATlC,oCAYgBA,GAAkB,GAClBF,GAAgB,GAChBJ,EAAmB,2EAdnC,oCAiBgBe,QAAQ+B,IAAI,+DAjB5B,oCAoBgB/B,QAAQ+B,IAAI,6BApB5B,+EAwBQ/B,QAAQ+B,IAAI,mCAAZ,MAxBR,2DAtBqB,0DAiDrBC,IA0H4BC,aAAW,WAAWC,mBAAiB,oBAG/C,sBAAKnE,UAAU,0BAAf,UAA0CiB,EAA1C,aAEJ,sBAAKjB,UAAU,aAAf,UACI,uBAAOsC,QAAQ,WAAWtC,UAAU,aAApC,sBAIA,sBAAKA,UAAU,mBAAf,UACI,qBAAKA,UAAU,sBAAf,SACI,sBAAMA,UAAU,yBAAyBuC,GAAG,eAA5C,SACI,qBAAKC,MAAM,6BAA6BC,MAAM,KAAKC,OAAO,KAAKC,KAAK,eAAe3C,UAAU,iBAAiB4C,QAAQ,YAAtH,SACI,sBAAMC,EAAE,oJAIpB,uBAAOhB,KAAK,WAAW7B,UAAS,uBAAkByB,EAAc,sBAAwB,IAAMqB,YAAY,wBACtGC,SAAU,SAACnB,GAAD,OAAUD,EAAMC,EAAM,aAChCqB,OA3IhC,WACoB,KAAblC,GACCW,GAAe,GACfN,EAAkB,gCAEfM,GAAe,IAuIMwC,aAAW,WAAWC,mBAAiB,oBAG/C,sBAAKnE,UAAU,0BAAf,UAA0CmB,EAA1C,aAGJ,qBAAKnB,UAAU,wCAAf,SACI,mBAAGoE,KAAK,KAAKpE,UAAU,gBAAvB,gCAGJ,qBAAKA,UAAU,mCAAf,SACI,eAACE,EAAD,CAAcmE,OAAK,EAACC,KAAK,KAAKtE,UAAU,wBAAwB6B,KAAK,SAAS0C,QA/ItG,SAAgBC,GAEZA,EAAMC,iBAENvD,EAAmB,IACnBE,EAAkB,IAElB,IAAIsD,EAAY,EAShB,GARa,KAAV7D,IACCK,EAAmB,+BACnBwD,EAAY,GAEA,KAAb3D,IACCK,EAAkB,+BAClBsD,EAAY,GAEC,IAAdA,EAAH,CAEAhE,GAAa,GAEb,IAAIyC,EAAO,GACXA,EAAKC,KAAOvC,EACZsC,EAAKpC,SAAWA,EAEhB,IAMIsC,EANAC,EAAM,kBACNC,EAAS,CACTC,OAAQ,OACRC,KAAMC,KAAKC,UAAUR,IAIrBS,EAAY,GA/BG,mCA6EnBe,GA7EmB,4CAgCnB,4BAAAd,EAAA,+EAEyBC,MAAMR,EAAKC,GAFpC,cAEQF,EAFR,OAIQO,EAAYP,EAASU,OAJ7B,SAK+BV,EAASuB,OALxC,OAKcC,EALd,YAOgBjB,EAPhB,OAQiB,MARjB,QAaiB,MAbjB,QAiBiB,MAjBjB,QAwBiB,MAxBjB,QA4BiB,MA5BjB,gCASgBlD,GAAa,GACbyB,aAAa2C,QAAQ,eAAgBjE,GACrCF,EAAQ0B,KAAK,kBAX7B,oCAcgB3B,GAAa,GACbqE,MAAM,4CAftB,oCAkBgBrE,GAAa,GACa,kBAAtBmE,EAAQ,MACV3D,EAAmB,kCACU,qBAAtB2D,EAAQ,OACfzD,EAAkB,sCAtBpC,oCAyBgBV,GAAa,GACbqE,MAAM,gDA1BtB,oCA6BgBrE,GAAa,GACbqE,MAAM,iDACN9C,QAAQ+B,IAAI,iBA/B5B,oCAkCgBtD,GAAa,GACbuB,QAAQ+B,IAAI,8BAnC5B,+EAwCQ/B,QAAQ+B,IAAI,mCAAZ,MACAtD,GAAa,GAzCrB,2DAhCmB,wBAgJKP,UAAWA,EADf,uBAGI,sBAAKqC,MAAM,6BAA6BC,MAAM,KAAKC,OAAO,KAAKC,KAAK,eAAe3C,UAAU,2BAA2B4C,QAAQ,YAAhI,UACI,sBAAMoC,SAAS,UAAUnC,EAAE,yNAC3B,sBAAMmC,SAAS,UAAUnC,EAAE,0J,YC3LhDoC,MA7Df,WAEI,IAAMtE,EAAUC,cAEhB,EAAsCH,oBAAS,GAA/C,mBAAOyE,EAAP,KAAoBC,EAApB,KAsBA,OACI,0CApBahD,aAAaC,QAAQ,iBAG9BzB,EAAQ0B,KAAK,WAqBb,sBAAKrC,UAAS,kDAA6CkF,EAAc,kBAAoB,mBAA7F,UACI,wBAAQX,QAVpB,WACIY,GAAe,IASyBnF,UAAU,uBAA1C,wBACA,mBAAGoE,KAAK,IAAIpE,UAAU,wBAAtB,uBACA,mBAAGoE,KAAK,IAAIpE,UAAU,wBAAtB,qBACA,mBAAGoE,KAAK,IAAIpE,UAAU,wBAAtB,yBAKJ,sBAAKA,UAAU,oDAAf,UACI,wBAAQA,UAAU,0CAA0CuE,QAtBxE,WACIY,GAAe,IAqBP,wBACA,qBAAKnF,UAAU,+EAAf,4BAEA,sBAAKA,UAAU,4CAAf,UACI,wBAAQA,UAAU,mDAAmD6B,KAAK,SAASU,GAAG,sBAAsB6C,iBAAe,WAAWC,gBAAc,QAApJ,SACI,qBAAK7C,MAAM,6BAA6BC,MAAM,KAAKC,OAAO,KAAKC,KAAK,eAAe2C,MAAM,kBAAkB1C,QAAQ,YAAnH,SACI,sBAAMC,EAAE,uqBAGhB,qBAAI7C,UAAU,gBAAgBuF,kBAAgB,sBAA9C,UACI,6BAAI,wBAAQvF,UAAU,gBAAlB,wBACJ,6BAAI,wBAAQA,UAAU,gBAAgBuE,QAAS,kBAtCnE,SAAsB5D,GAClBwB,aAAaqD,QACb7E,EAAQ0B,KAAK,UAoCwDoD,CAAa9E,IAA9D,mCCoFb+E,MAxIf,WAEI,MAAwCjF,mBAAS,IAAjD,mBAAOkF,EAAP,KAAqBC,EAArB,KACA,EAAwCnF,mBAAS,IAAjD,mBAAOoF,EAAP,KAAqBC,EAArB,KACA,EAAwCrF,mBAAS,IAAjD,mBAAOsF,EAAP,KAAqBC,EAArB,KAEA,SAASC,EAAMrE,EAAMC,GAEjB,IAAIC,EAAYF,EAAKG,OAAOC,MAC5B,OAAQH,GACJ,IAAK,eACD+D,EAAgB9D,GAChB,MAEJ,IAAK,eACDgE,EAAgBhE,GAChB,MAEJ,IAAK,eACDkE,EAAgBlE,GAChB,MAEJ,QACIG,QAAQC,KAAK,wCAwDzB,OACI,qCACI,cAAC,EAAD,IAEA,qBAAKlC,UAAU,gCAAf,SACI,qBAAKA,UAAU,MAAf,SACI,qBAAKA,UAAU,0EAAf,SACI,sBAAKA,UAAU,yBAAf,UACI,iDAEA,sBAAKA,UAAU,uEAAf,UACI,uBAAOsC,QAAQ,WAAWtC,UAAU,8BAApC,8BAGA,uBAAO6B,KAAK,WAAW7B,UAAU,gCAAgCuC,GAAG,sBAChEQ,SAAU,SAACnB,GAAD,OAAUqE,EAAMrE,EAAM,iBAChCuC,mBAAiB,eAAerB,YAAY,8BAIpD,sBAAK9C,UAAU,uEAAf,UACI,uBAAOsC,QAAQ,WAAWtC,UAAU,8BAApC,0BAGA,uBAAO6B,KAAK,WAAW7B,UAAU,gCAAgCuC,GAAG,sBAChEQ,SAAU,SAACnB,GAAD,OAAUqE,EAAMrE,EAAM,iBAChCuC,mBAAiB,eAAerB,YAAY,0BAIpD,sBAAK9C,UAAU,uEAAf,UACI,uBAAOsC,QAAQ,WAAWtC,UAAU,8BAApC,kCAGA,uBAAO6B,KAAK,WAAW7B,UAAU,gCAAgCuC,GAAG,sBAChEQ,SAAU,SAACnB,GAAD,OAAUqE,EAAMrE,EAAM,iBAChCuC,mBAAiB,eAAerB,YAAY,6BAGpD,qBAAK9C,UAAU,2CAAf,SACI,wBAAQA,UAAU,uCACduE,QA3FhC,SAA0BC,GAItB,GAFAA,EAAMC,iBAEHoB,IAAiBE,EAApB,CAKA,IAAI5C,EAAO,GACXA,EAAK+C,KAAO/D,aAAagE,aACzBhD,EAAKiD,SAAWT,EAChBxC,EAAKkD,QAAUN,EAEf,IAMI1C,EALAE,EAAS,CACTC,OAAQ,OACRC,KAAMC,KAAKC,UAAUR,IAIrBS,EAAY,EAEhB,sBAAC,sBAAAC,EAAA,+EAEwBC,MAXf,kBAW0BP,GAFnC,OAEOF,EAFP,OAIOO,EAAYP,EAASU,OAJ5B,KAMeH,EANf,OAOgB,MAPhB,OAUgB,MAVhB,QAagB,MAbhB,+BAQemB,MAAM,kCARrB,oCAWeA,MAAM,4BAXrB,oCAceA,MAAM,wBAdrB,oCAiBe9C,QAAQ+B,IAAI,6BAjB3B,+EAqBO/B,QAAQ+B,IAAI,mCAAZ,MArBP,yDAAD,QAlBIe,MAAM,gCAqFc,mCCpGjBuB,MAhBf,WAEE,OACE,sBAAKtG,UAAU,MAAf,UAEI,cAAC,IAAD,CAAOuG,OAAK,EAACC,KAAK,IAAIC,UAAW1G,IACjC,cAAC,IAAD,CAAOwG,OAAK,EAACC,KAAK,SAASC,UAAWjG,IAEtC,cAAC,IAAD,CAAO+F,OAAK,EAACC,KAAK,iBAAiBC,UAAWf,QCHvCgB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCCdQ,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.58b30b9d.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport default function Home() {\n    return (\n        <div>\n            <h1 className=\"display-3\">This is the Homepage</h1>\n            <Link to=\"/login\" className=\"btn btn-info\">Login</Link>\n            <Link to=\"/TempDashboard\" className=\"btn btn-info\">TempDashboard</Link>\n        </div>\n    )\n}\n","import React from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport { BsArrowRepeat } from \"react-icons/bs\";\n// import \"./LoaderButton.css\";\n\nexport default function LoaderButton({\n  isLoading,\n  className = \"\",\n  disabled = false,\n  ...props\n}) {\n  return (\n    <Button\n      disabled={disabled || isLoading}\n      className={`LoaderButton ${className}`}\n      {...props}\n    >\n      {isLoading && <BsArrowRepeat className=\"spinning\" />}\n      {props.children}\n    </Button>\n  );\n}","import React, { useState } from 'react'\nimport './Login-css.css'\nimport { useHistory } from 'react-router-dom'\nimport LoaderButton from './LoaderButton'\n\nfunction Login() {\n\n    const [isLoading, setIsLoading] = useState(false);\n\n    const history = useHistory();\n\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n\n    const [invalidEmailMsg, setinvalidEmailMsg] = useState(\"\");\n    const [invalidPassMsg, setinvalidPassMsg] = useState(\"\");\n\n    const [isEmailValid, setisEmailValid] = useState(true);\n    const [makeEmailGreen, setmakeEmailGreen] = useState(false);\n    const [isPassEmpty, setisPassEmpty] = useState(false);\n\n    function valid(item, type) {\n\n        let itemValue = item.target.value;\n        switch (type) {\n            case \"email\": {\n                setisEmailValid(true);\n                setinvalidEmailMsg(\"\");\n                setEmail(itemValue);\n                break;\n            }\n            case \"password\": {\n                setisPassEmpty(false);\n                setinvalidPassMsg(\"\");\n                setPassword(itemValue);\n                break;\n            }\n            default: {\n                console.warn(\"This is a default (unhandled) case.\");\n                break;\n            }\n        }\n    }\n\n    function validateEmail() {\n\n        if(!email.includes(\"@\") ||!email.includes(\".\") || email.includes(\",\") || email.includes(\" \")\n          ||email.includes(\"/\") || email.includes(\"?\")) {\n            // update state by setState\n            setisEmailValid(false)\n            setinvalidEmailMsg(\"Please enter a valid Email ID!\")\n            return\n        }\n        else { setisEmailValid(true) }\n\n        let data = {};\n        data.user = email;\n\n        let url = \"/validate/email\";\n        let params = {\n            method: 'post',\n            body: JSON.stringify(data),\n        };\n\n        let response;\n        let resStatus = 0;\n        async function validateEmail() {\n            try {\n                response = await fetch(url, params);\n\n                resStatus = response.status;\n                // const jsonData = await response.json();\n\n                switch (resStatus) {\n                    case 200:\n                        setmakeEmailGreen(true)\n                        break;\n                    case 401:\n                        setmakeEmailGreen(false)\n                        setisEmailValid(false)\n                        setinvalidEmailMsg(\"This Email ID is not registered with us. Please enter a valid Email ID.\")\n                        break;\n                    case 500:\n                        console.log(\"500 - Server error, unable to validate email from database.\")\n                        break;\n                    default:\n                        console.log(\"Default (unhandled) case.\")\n                        break;\n                }\n            } catch (error) {\n                console.log(\"Failure, there was some error...\", error);\n            }\n        }\n        validateEmail()\n    }\n\n    function checkIfPasswordEmpty() {\n        if(password === \"\") {\n            setisPassEmpty(true)\n            setinvalidPassMsg(\"Please enter your password!\")\n        }\n        else { setisPassEmpty(false) }\n    }\n\n    function submit(event) {\n\n        event.preventDefault();\n\n        setinvalidEmailMsg(\"\");\n        setinvalidPassMsg(\"\");\n\n        let retStatus = 0;\n        if(email === \"\") {\n            setinvalidEmailMsg(\"Please enter your Email ID!\");\n            retStatus = 1;\n        }\n        if(password === \"\") {\n            setinvalidPassMsg(\"Please enter your password!\");\n            retStatus = 1;\n        }\n        if(retStatus === 1) return\n\n        setIsLoading(true);\n\n        let data = {};\n        data.user = email;\n        data.password = password;\n\n        let url = \"/validate/login\";\n        let params = {\n            method: 'post',\n            body: JSON.stringify(data),\n        };\n\n        let response;\n        let resStatus = 0;\n        async function validateUser() {\n            try {\n                response = await fetch(url, params);\n\n                resStatus = response.status;\n                const jsonData = await response.json();\n\n                switch (resStatus) {\n                    case 200:\n                        setIsLoading(false);\n                        localStorage.setItem('isLoggedInLS', email);\n                        history.push(\"/TempDashboard\");\n                        break;\n                    case 400:\n                        setIsLoading(false);\n                        alert(\"Please enter both email ID and password!\");\n                        break;\n                    case 401:\n                        setIsLoading(false);\n                        if (jsonData['error'] === \"Invalid email\")\n                        { setinvalidEmailMsg(\"Please enter a valid Email ID!\"); }\n                        else if (jsonData['error'] === \"Invalid password\")\n                        { setinvalidPassMsg(\"Please enter the correct password!\"); }\n                        break;\n                    case 404:\n                        setIsLoading(false);\n                        alert(\"Make sure you are connected to the internet!\");\n                        break;\n                    case 500:\n                        setIsLoading(false);\n                        alert(\"Something went wrong, please try again later!\");\n                        console.log(\"Server error!\");\n                        break;\n                    default:\n                        setIsLoading(false);\n                        console.log(\"Unhandled response status.\");\n                        break;\n                }\n\n            } catch (error) {\n                console.log(\"Failure, there was some error...\", error);\n                setIsLoading(false);\n            }\n\n        }\n        validateUser();\n\n    }\n    function checkIfAlreadyLoggedIn() {\n        let logged = localStorage.getItem('isLoggedInLS');\n        if (logged) {\n            history.push('/TempDashboard');\n        }\n    }\n\n    return (\n        <>\n            {checkIfAlreadyLoggedIn()}\n\n            <form className=\"container form\">\n                <div className=\"row\">\n                    <div className=\"col-md-6 login-form-1 mx-auto my-5 border border-primary rounded shadow\">\n                        <h3 className=\"m-5 text-center\">Login</h3>\n\n                        <div className=\"form-group mb-3\">\n                            <label htmlFor=\"username\" className=\"form-label\">\n                                EMail ID\n                            </label>\n                            <div className=\"input-group mb-1\">\n                                <div className=\"input-group-prepend\">\n                                    <span className=\"input-group-text h-100\" id=\"basic-addon1\">\n                                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-envelope-fill\" viewBox=\"0 0 16 16\">\n                                            <path d=\"M.05 3.555A2 2 0 0 1 2 2h12a2 2 0 0 1 1.95 1.555L8 8.414.05 3.555zM0 4.697v7.104l5.803-3.558L0 4.697zM6.761 8.83l-6.57 4.027A2 2 0 0 0 2 14h12a2 2 0 0 0 1.808-1.144l-6.57-4.027L8 9.586l-1.239-.757zm3.436-.586L16 11.801V4.697l-5.803 3.546z\" />\n                                        </svg>\n                                    </span>\n                                </div>\n                                <input type=\"email\" className={`form-control emailInput ${isEmailValid ? \"\" : \"invalid-field-color\"} ${makeEmailGreen ? \"email-green-color\" : \"\"}`} placeholder=\"Please enter Email Id\"\n                                    onChange={(item) => valid(item, \"email\")} spellCheck=\"false\"\n                                    onBlur={validateEmail}\n                                    aria-label=\"username\" aria-describedby=\"basic-addon1\"\n                                />\n                            </div>\n                            <div className=\"invalid-credentials-msg\">{invalidEmailMsg}&nbsp;</div>\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"password\" className=\"form-label\">\n                                Password\n                            </label>\n\n                            <div className=\"input-group mb-1\">\n                                <div className=\"input-group-prepend\">\n                                    <span className=\"input-group-text h-100\" id=\"basic-addon2\">\n                                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-key-fill\" viewBox=\"0 0 16 16\">\n                                            <path d=\"M3.5 11.5a3.5 3.5 0 1 1 3.163-5H14L15.5 8 14 9.5l-1-1-1 1-1-1-1 1-1-1-1 1H6.663a3.5 3.5 0 0 1-3.163 2zM2.5 9a1 1 0 1 0 0-2 1 1 0 0 0 0 2z\" />\n                                        </svg>\n                                    </span>\n                                </div>\n                                <input type=\"password\" className={`form-control ${isPassEmpty ? \"invalid-field-color\" : \"\"}`} placeholder=\"Please enter password\"\n                                    onChange={(item) => valid(item, \"password\")}\n                                    onBlur={checkIfPasswordEmpty}\n                                    aria-label=\"password\" aria-describedby=\"basic-addon2\"\n                                />\n                            </div>\n                            <div className=\"invalid-credentials-msg\">{invalidPassMsg}&nbsp;</div>\n                        </div>\n\n                        <div className=\"form-group d-flex justify-content-end\">\n                            <a href=\"/#\" className=\"d-block mb-4 \">Forgot Password?</a>\n                        </div>\n\n                        <div className=\"form-group mb-5 pb-2 text-center\">\n                            <LoaderButton block size=\"lg\" className=\"px-4 button-width-css\" type=\"submit\" onClick={submit}\n                                isLoading={isLoading}>\n                                Login &nbsp;\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-box-arrow-in-right\" viewBox=\"0 0 16 16\">\n                                    <path fillRule=\"evenodd\" d=\"M6 3.5a.5.5 0 0 1 .5-.5h8a.5.5 0 0 1 .5.5v9a.5.5 0 0 1-.5.5h-8a.5.5 0 0 1-.5-.5v-2a.5.5 0 0 0-1 0v2A1.5 1.5 0 0 0 6.5 14h8a1.5 1.5 0 0 0 1.5-1.5v-9A1.5 1.5 0 0 0 14.5 2h-8A1.5 1.5 0 0 0 5 3.5v2a.5.5 0 0 0 1 0v-2z\" />\n                                    <path fillRule=\"evenodd\" d=\"M11.854 8.354a.5.5 0 0 0 0-.708l-3-3a.5.5 0 1 0-.708.708L10.293 7.5H1.5a.5.5 0 0 0 0 1h8.793l-2.147 2.146a.5.5 0 0 0 .708.708l3-3z\" />\n                                </svg>\n                            </LoaderButton>\n                        </div>\n                    </div>\n                </div>\n\n            </form>\n        </>\n    );\n}\n\nexport default Login\n","import React, { useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport './DashboardHeader.css'\n\nfunction DashboardHeader() {\n\n    const history = useHistory();\n\n    const [SidenavOpen, setSidenavOpen] = useState(false);\n\n    function validateFirst() {\n        let logged = localStorage.getItem('isLoggedInLS');\n\n        if (!logged) {\n            history.push(\"/login\");\n        }\n    }\n\n    function clearSession(history) {\n        localStorage.clear();\n        history.push(\"/login\");\n    }\n\n    function sidenav_open() {\n        setSidenavOpen(true)\n    }\n    function sidenav_close() {\n        setSidenavOpen(false)\n    }\n\n    return (\n        <>\n            {validateFirst()}\n\n            {/* Sidebar */}\n            <div className={`w3-sidebar w3-bar-block w3-border-right ${SidenavOpen ? \"mySidebarOpened\" : \"mySidebarClosed\"}`}>\n                <button onClick={sidenav_close} className=\"w3-bar-item w3-large\">Close &times;</button>\n                <a href=\"/\" className=\"w3-bar-item w3-button\">Dashboard</a>\n                <a href=\"/\" className=\"w3-bar-item w3-button\">Profile</a>\n                <a href=\"/\" className=\"w3-bar-item w3-button\">Settings</a>\n            </div>\n\n            {/* Header */}\n\n            <div className=\"row mb-3 dashboard d-flex justify-content-between\">\n                <button className=\"w3-button w3-xlarge col-1 hamburger-css\" onClick={sidenav_open}>&nbsp;☰</button>\n                <div className=\"display-6 col-8 dash-header d-flex align-items-center justify-content-center\">User Dashboard</div>\n\n                <div className=\"dropdown col-1 d-flex justify-content-end\">\n                    <button className=\"btn btn-info dropdown-toggle h-100 settings-icon\" type=\"button\" id=\"dropdownMenuButton1\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-gear-fill\" viewBox=\"0 0 16 16\">\n                            <path d=\"M9.405 1.05c-.413-1.4-2.397-1.4-2.81 0l-.1.34a1.464 1.464 0 0 1-2.105.872l-.31-.17c-1.283-.698-2.686.705-1.987 1.987l.169.311c.446.82.023 1.841-.872 2.105l-.34.1c-1.4.413-1.4 2.397 0 2.81l.34.1a1.464 1.464 0 0 1 .872 2.105l-.17.31c-.698 1.283.705 2.686 1.987 1.987l.311-.169a1.464 1.464 0 0 1 2.105.872l.1.34c.413 1.4 2.397 1.4 2.81 0l.1-.34a1.464 1.464 0 0 1 2.105-.872l.31.17c1.283.698 2.686-.705 1.987-1.987l-.169-.311a1.464 1.464 0 0 1 .872-2.105l.34-.1c1.4-.413 1.4-2.397 0-2.81l-.34-.1a1.464 1.464 0 0 1-.872-2.105l.17-.31c.698-1.283-.705-2.686-1.987-1.987l-.311.169a1.464 1.464 0 0 1-2.105-.872l-.1-.34zM8 10.93a2.929 2.929 0 1 1 0-5.86 2.929 2.929 0 0 1 0 5.858z\" />\n                        </svg>\n                    </button>\n                    <ul className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton1\">\n                        <li><button className=\"dropdown-item\">Option 1</button></li>\n                        <li><button className=\"dropdown-item\" onClick={() => clearSession(history)}>Logout</button></li>\n                    </ul>\n                </div>\n\n            </div>\n        </>\n    )\n}\n\nexport default DashboardHeader\n","import React, { useState } from 'react';\nimport './TempDashboard.css'\nimport DashboardHeader from './DashboardHeader'\n\nfunction TempDashboard() {\n\n    const [currPassword, setcurrPassword] = useState(\"\");\n    const [newPassword1, setnewPassword1] = useState(\"\");\n    const [newPassword2, setnewPassword2] = useState(\"\");\n\n    function store(item, type) {\n\n        let itemValue = item.target.value;\n        switch (type) {\n            case \"currPassword\": {\n                setcurrPassword(itemValue)\n                break\n            }\n            case \"newPassword1\": {\n                setnewPassword1(itemValue)\n                break\n            }\n            case \"newPassword2\": {\n                setnewPassword2(itemValue)\n                break\n            }\n            default: {\n                console.warn(\"This is a default (unhandled) case.\");\n                break\n            }\n        }\n    }\n\n    function submitPassChange(event) {\n\n        event.preventDefault();\n\n        if(newPassword1 !== newPassword2) {\n            alert(\"New passwords do not match!\")\n            return\n        }\n\n        let data = {};\n        data.User = localStorage.isLoggedInLS;     // Check this\n        data.CurrPass = currPassword;\n        data.NewPass = newPassword2;\n\n        let url = \"/api/changePass\";\n        let params = {\n            method: 'post',\n            body: JSON.stringify(data),\n        };\n\n        let response;\n        let resStatus = 0;\n\n        (async function() {\n            try {\n                response = await fetch(url, params);\n\n                resStatus = response.status;\n\n                switch (resStatus) {\n                    case 200:\n                        alert(\"Password changed successfully!\")\n                        break\n                    case 401:\n                        alert(\"Invalid current password\")\n                        break\n                    case 500:\n                        alert(\"Something went wrong\")\n                        break\n                    default:\n                        console.log(\"Default (unhandled) case.\")\n                        break;\n                }\n            } catch (error) {\n                console.log(\"Failure, there was some error...\", error);\n            }\n        })()\n        \n    }\n\n    return (\n        <>\n            <DashboardHeader />\n\n            <div className=\"container form mt-5 dashboard\">\n                <div className=\"row\">\n                    <div className=\"col-md-9 login-form-1 mx-auto my-1 border border-primary rounded shadow\">\n                        <div className=\"col-12 text-center p-4\">\n                            <h3>Change Password</h3>\n\n                            <div className=\"row form-group mt-5 d-flex align-items-center justify-content-center\">\n                                <label htmlFor=\"currPass\" className=\"form-label label-custom-css\">\n                                    Current Password\n                                </label>\n                                <input type=\"password\" className=\"form-control input-custom-css\" id=\"exammpleInputEmail1\"\n                                    onChange={(item) => store(item, \"currPassword\")}\n                                    aria-describedby=\"basic-addon1\" placeholder=\"Enter current password\"\n                                />\n                            </div>\n\n                            <div className=\"row form-group mt-5 d-flex align-items-center justify-content-center\">\n                                <label htmlFor=\"currPass\" className=\"form-label label-custom-css\">\n                                    New Password\n                                </label>\n                                <input type=\"password\" className=\"form-control input-custom-css\" id=\"exammpleInputEmail1\"\n                                    onChange={(item) => store(item, \"newPassword1\")}\n                                    aria-describedby=\"basic-addon1\" placeholder=\"Enter new password\"\n                                />\n                            </div>\n\n                            <div className=\"row form-group mt-5 d-flex align-items-center justify-content-center\">\n                                <label htmlFor=\"currPass\" className=\"form-label label-custom-css\">\n                                    Confirm New Password\n                                </label>\n                                <input type=\"password\" className=\"form-control input-custom-css\" id=\"exammpleInputEmail1\"\n                                    onChange={(item) => store(item, \"newPassword2\")}\n                                    aria-describedby=\"basic-addon1\" placeholder=\"Re-enter new password\" />\n                            </div>\n\n                            <div className=\"form-group mt-4 mx-auto py-4 text-center\">\n                                <button className=\"btn btn-info col-2 submit-button-css\"\n                                    onClick={submitPassChange}>\n                                    Submit\n                                </button>\n\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n\n\n        </>\n    )\n}\n\nexport default TempDashboard\n","//import './App.css';\nimport Home from \"./components/Home\";\nimport Login from './components/user/Login';\n//import Signup from './components/user/Signup';\nimport { Route } from \"react-router-dom\";\nimport TempDashboard from './components/user/TempDashboard';\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n        {/* <Navbar /> */}\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/login\" component={Login} />\n        \n        <Route exact path=\"/TempDashboard\" component={TempDashboard} />\n        \n        {/* <Route exact path=\"/signup\" component={Signup} /> */}\n      \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}